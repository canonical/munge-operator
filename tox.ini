# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
;TODO: Uncomment after auth_munge_requires has been committed.
;lib_path = {toxinidir}/lib/charms/munge
all_path = {[vars]src_path} {[vars]tst_path} 

[testenv]
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
passenv =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    ruff --fix {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    # TODO: Uncomment after auth_munge_requires has been committed.
    # codespell {[vars]lib_path}
    codespell {toxinidir}/. --skip {toxinidir}/.git --skip {toxinidir}/.tox \
        --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
        --skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg

    ruff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}unit -v --tb native -s {posargs}
    coverage report

[testenv:{integration-munge-ready,integration-auth-munge}]
description = Run integration tests
deps =
    pytest
    juju
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    integration-munge-ready: pytest -v --tb native --ignore={[vars]tst_path}integration/munge-ready --log-cli-level=INFO -s {posargs}
    integration-auth-munge: pytest -v --tb native --ignore={[vars]tst_path}integration/auth-munge --log-cli-level=INFO -s {posargs}
